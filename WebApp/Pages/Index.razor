@page "/"
@inject IMeasurementService<Humidity> HumidityService
@inject IMeasurementService<Temprature> TempratureService

<PageTitle>Index</PageTitle>

<RadzenButton style="width: 160px" BusyText="Opdaterer..." IsBusy=@Isbusy Click=@Update Text="Opdater" />

<div class="row">
    <div class="col-md-6 col-sm-12">
        <RadzenArcGauge Style="width: 100%; height: 250px;">
                <RadzenArcGaugeScale Step="20" Min="0" Max="100" MinorStep="5" Radius="1.5" TickPosition=@(GaugeTickPosition.Outside) Y="0.9" Margin="0">
                    <RadzenArcGaugeScaleValue Value=@LatestHum.humidity ShowValue=true Fill="blue">
                        <Template Context="pointer">
                            <h4>
                                @pointer.Value <sup>%</sup>
                            </h4>
                        </Template>
                    </RadzenArcGaugeScaleValue>
                </RadzenArcGaugeScale>
        </RadzenArcGauge>
    </div>
    <div class="col-md-6 col-sm-12">
        <RadzenArcGauge Style="width: 100%; height: 250px;">
                <RadzenArcGaugeScale Step="20" Min="-20" Max="50" MinorStep="5" Radius="1.5" TickPosition=@(GaugeTickPosition.Outside) Y="0.9" Margin="0">
                    <RadzenArcGaugeScaleValue Value=@LatestTemp.tempratureC ShowValue=true Fill="red">
                        <Template Context="pointer">
                            <h4>
                                @pointer.Value <sup>°C</sup>
                            </h4>
                        </Template>
                    </RadzenArcGaugeScaleValue>
                </RadzenArcGaugeScale>
        </RadzenArcGauge>
    </div>
</div>

@code{
    Humidity LatestHum = new Humidity();
    Temprature LatestTemp = new Temprature();

    public bool Isbusy { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        await Update();
    }

    public async Task Update()
    {
        Isbusy = true;
        LatestHum = await HumidityService.GetLatestAsync("Humidity");
        LatestTemp = await TempratureService.GetLatestAsync("TempratureC");
        if (LatestHum == null)
        {
            LatestHum = new Humidity();
        }

        if (LatestTemp == null)
        {
            LatestTemp = new Temprature();
        }
        Isbusy = false;
    }

}